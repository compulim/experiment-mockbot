{
  "name": "@microsoft/botframework-mockbot-pages",
  "version": "0.0.0-0",
  "license": "MIT",
  "private": true,
  "files": [
    "./public/"
  ],
  "scripts": {
    "build": "esbuild --bundle --define:BOT_APP_URL=\\\"$BOT_APP_URL\\\" --define:TOKEN_APP_URL=\\\"$TOKEN_APP_URL\\\" --entry-names=[name]/[ext]/main --jsx=automatic --minify --outdir=./public/static/ --sourcemap app=./src/app/index.tsx",
    "bump": "npm run bump:prod && npm run bump:dev && npm run bump:auditfix",
    "bump:auditfix": "npm audit fix || exit 0",
    "bump:dev": "PACKAGES_TO_BUMP=$(cat package.json | jq -r '(.pinDependencies // {}) as $P | (.localPeerDependencies // {}) as $L | (.devDependencies // {}) | to_entries | map(select(.key as $K | $L | has($K) | not)) | map(.key + \"@\" + ($P[.key] // [\"latest\"])[0]) | join(\" \")') && [ ! -z \"$PACKAGES_TO_BUMP\" ] && npm install $PACKAGES_TO_BUMP || true",
    "bump:prod": "PACKAGES_TO_BUMP=$(cat package.json | jq -r '(.pinDependencies // {}) as $P | (.localPeerDependencies // {}) as $L | (.dependencies // {}) | to_entries | map(select(.key as $K | $L | has($K) | not)) | map(.key + \"@\" + ($P[.key] // [\"latest\"])[0]) | join(\" \")') && [ ! -z \"$PACKAGES_TO_BUMP\" ] && npm install $PACKAGES_TO_BUMP || true",
    "precommit": "npm run precommit:typescript",
    "precommit:typescript": "tsc --project ./src/tsconfig.json",
    "start": "npm run build -- --servedir=./public"
  },
  "devDependencies": {
    "@tsconfig/strictest": "^2.0.5",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "esbuild": "^0.23.0"
  },
  "dependencies": {
    "@microsoft/botframework-mockbot-pages-bot-as-chat-adapter": "^0.0.0-0",
    "botframework-webchat": "^4.18.0",
    "copilot-studio-direct-to-engine-chat-adapter": "^0.0.0-main.20240702-213245.f263309",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "valibot": "^0.36.0"
  }
}
